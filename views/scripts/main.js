// Generated by CoffeeScript 1.6.2
(function() {
  require.config({
    paths: {
      'jquery': '/scripts/vendor/jquery/jquery.min',
      'moment': '/scripts/vendor/moment/min/moment.min',
      'underscore': '/scripts/vendor/lodash/dist/lodash.min',
      'underscore.string': '/scripts/vendor/underscore.string/dist/underscore.string.min',
      'utils': 'utils'
    },
    shim: {
      'underscore': {
        exports: '_'
      },
      'underscore.string': {
        deps: ['underscore'],
        init: function(_) {
          return _.mixin(_.str.exports());
        }
      }
    }
  });

  require(['utils', 'jquery', 'moment', 'underscore', 'underscore.string'], function(utils, $, moment) {
    'use strict';    return $(function() {
      var $approve, $btnNow, $btns, $cancel, $clear, $dds, $edit, $labels, $submit, $trash, displayStatus;

      console.log('Peeking behind the curtains now, are you?');
      $labels = $('label');
      $submit = $('#submit');
      $btns = $('.btn');
      $clear = $('#clear');
      $edit = $('#edit');
      $approve = $('#approve');
      $cancel = $('#cancel');
      $trash = $('#trash');
      $dds = $('dd');
      $btnNow = $('#btnNow');
      $labels.each(function() {
        return $(this).html(_.str.humanize($(this).html()));
      });
      displayStatus = function(sel, banner, msg) {
        $('.alert :first').addClass(sel);
        $('.alert :first strong').html(banner);
        $('.alert :first p').html(msg);
        return $('.alert :first').fadeToggle('slow');
      };
      $(document).on('click', function() {
        if ($('.alert :first').is(':visible')) {
          return $('.alert :first').fadeToggle();
        }
      });
      $btns.on('click', function(e) {
        return e.preventDefault();
      });
      $clear.on('click', function() {
        return $(this).closest('form').find("input[type=text], textarea").val("");
      });
      $btnNow.on('click', function(e) {
        var $input;

        $input = $(this).prev('input:first');
        return $input.val(moment(new Date()).format('MMM DD YYYY'));
      });
      $submit.on('click', function(e) {
        var $form, apiRoot, path;

        path = window.location.pathname.split('/');
        apiRoot = path[path.length - 1];
        $form = $(this).parents('form:first');
        e.preventDefault();
        if ($form.serialize()) {
          return $.ajax({
            type: "POST",
            url: '/api/' + apiRoot,
            data: $form.serialize(),
            success: function(data) {
              $form.find("input[type=text], textarea").val("");
              if (data.error) {
                return displayStatus(null, 'WARNING', data.error.message);
              } else {
                return displayStatus('alert-success', 'All Good.', '"' + data.title + '" has been posted to the server.');
              }
            },
            error: function(err) {
              return displayStatus('alert-error', 'Code Red - Danger!', err.statusText);
            }
          });
        } else {
          return $('.container').append('<div class="warning"><p class="text-error">Please enter some data before your submit!<p></div>');
        }
      });
      $edit.on('click', function() {
        $(this).addClass('disabled');
        $approve.removeClass('disabled');
        $cancel.removeClass('disabled');
        $trash.addClass('disabled');
        return $dds.each(function(val) {
          var $content, $current, $label, $self;

          $self = $(this);
          $label = _.str.trim($self.prev().text());
          $current = $($self[0]).find('>:first-child');
          $content = $current.text();
          return $current.replaceWith('<input type="text" id="' + $label + '"name="' + $label + '" value="' + $content + '" />');
        });
      });
      $approve.on('click', function() {
        var $form, $id;

        $edit.removeClass('disabled');
        $(this).addClass('disabled');
        $cancel.addClass('disabled');
        $trash.removeClass('disabled');
        $form = $(this).parents('form:first');
        $id = $('#id').val();
        return $.ajax({
          type: "PUT",
          url: '/api/post/' + $id,
          data: $form.serialize(),
          success: function(data) {
            $dds.each(function(val) {
              var $content, $current, $self;

              $self = $(this);
              $current = $($self[0]).find('>:first-child');
              $content = $current.val();
              return $current.replaceWith('<p class="lead">' + $content + '</p>');
            });
            return $('.container').append('<div class="success"><p class="text-success">This record has been updated.<p></div>');
          }
        });
      });
      $cancel.on('click', function() {
        $edit.removeClass('disabled');
        $approve.addClass('disabled');
        $(this).addClass('disabled');
        $trash.removeClass('disabled');
        $dds.each(function(val) {
          var $content, $current, $self;

          $self = $(this);
          $current = $($self[0]).find('>:first-child');
          $content = $current.val();
          return $current.replaceWith('<p class="lead">' + $content + '</p>');
        });
        return $('.container').append('<div class="info"><p class="text-info">This update has been cancelled.<p></div>');
      });
      return $trash.on('click', function() {
        console.log($(this).attr('class'));
        return document.location.href = window.location.pathname.replace('input', 'kill');
      });
    });
  });

}).call(this);
